// Generated by Haxe 3.4.4
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Sprite = require("openfl/src/openfl/display/Sprite").default;
var Main = function() {
	Sprite.call(this);
	var loader = new Loader();
	loader.contentLoaderInfo.addEventListener(Event.COMPLETE,$bind(this,this.loader_onComplete));
	loader.load(new URLRequest("openfl.png"));
};
Main.main = function() {
	var div = window.document.createElement("div");
	div.id = "openfl-content";
	div.style.width = "550px";
	div.style.height = "400px";
	window.document.body.appendChild(div);
	var app = new Application();
	var config = { build : "1", company : "OpenFL", file : "entry.js", fps : 60, name : "OpenFL-JS BunnyMark", orientation : "portrait", packageName : "org.openfl.samples.bunnymark", version : "1.0.0", windows : [{ allowHighDPI : true, alwaysOnTop : false, antialiasing : 1, background : -1, borderless : false, colorDepth : 16, depthBuffer : false, display : 0, element : div, fullscreen : false, hardware : true, height : 400, hidden : false, maximized : false, minimized : false, parameters : { }, resizable : false, stencilBuffer : false, title : "", vsync : false, width : 550, x : 0, y : 0}]};
	app.create(config);
	var result = app.exec();
	var stage = app.window.stage;
	stage.addChild(new Main());
};
Main.__super__ = Sprite;
Main.prototype = $extend(Sprite.prototype,{
	loader_onComplete: function(event) {
		var bitmap = event.target.loader.content;
		bitmap.x = (this.stage.stageWidth - bitmap.width) / 2;
		bitmap.y = (this.stage.stageHeight - bitmap.height) / 2;
		this.addChild(bitmap);
	}
});
var Application = require("openfl/src/openfl/display/Application").default;
var Loader = require("openfl/src/openfl/display/Loader").default;
var URLRequest = require("openfl/src/openfl/net/URLRequest").default;
var Event = require("openfl/src/openfl/events/Event").default;
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
Main.main();
})();
